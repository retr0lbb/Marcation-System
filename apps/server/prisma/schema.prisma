// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @unique @default(autoincrement())
  name String @unique
  User User[]

  @@map("roles")
}

model User {
  id           String @id @unique @default(uuid())
  name         String
  email        String @unique
  contactPhone String @map("contact_phone")
  password     String
  roleId       Int

  Role    Role     @relation(fields: [roleId], references: [id])
  Medic   Medic?
  Patient Patient?
}

model Medic {
  id        String  @id @unique
  biography String?
  CRM       String  @unique
  userId    String  @unique

  user             User               @relation(fields: [userId], references: [id])
  Appointment      Appointment[]
  MedicEspeciality MedicEspeciality[]

  @@map("medics")
}

model Especiality {
  id               Int                @id @unique @default(autoincrement())
  name             String             @unique
  MedicEspeciality MedicEspeciality[]
}

model MedicEspeciality {
  id            Int    @id @unique @default(autoincrement())
  medicId       String
  especialityId Int

  especiality Especiality @relation(fields: [especialityId], references: [id])
  medic       Medic       @relation(fields: [medicId], references: [id])

  @@map("medic_especialities")
}

model Patient {
  id     String @id @unique
  userId String @unique

  user        User          @relation(fields: [userId], references: [id])
  Appointment Appointment[]
}

model Appointment {
  id                  String   @id @unique @default(uuid())
  marcationDate       DateTime @map("marcation_date")
  finalRecomendations String?  @map("final_recomendations")

  medicId   String?
  patientId String?

  Medic   Medic?   @relation(fields: [medicId], references: [id])
  Patient Patient? @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@map("appointments")
}
